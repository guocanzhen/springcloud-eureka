server.port=80

#服务消费者可以不向服务注册中心注册服务
eureka.client.register-with-eureka=false
#服务消费者客户端需要去检索服务
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone = http://eureka7001:7001/eureka/, http://eureka7002:7002/eureka/, http://eureka7003:7003/eureka/

######################### Ribbon 客户端超时控制 ###################################
#OpenFeign 客户端的默认超时时间为 1 秒钟，
# 如果服务端处理请求的时间超过 1 秒就会报错。
# 为了避免这样的情况，我们需要对 OpenFeign 客户端的超时时间进行控制。
#建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间
ribbon.ReadTimeout = 6000
#建立连接后，服务器读取到可用资源的时间
ribbon.ConnectionTimeout = 6000

#开启客户端 hystrix
feign.hystrix.enabled=true

######################配置请求超时时间##########################
#Hystrix 可以来为所有请求（方法）设置超时时间（单位为毫秒），若请求超时则触发全局的回退方法进行处理。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 7000
####################配置具体方法超时时间 为 3 秒########################
#Hystrix 还可以为某个特定的服务请求（方法）设置超时时间
#hystrix.command.xxx#yyy(zzz).execution.isolation.thread.timeoutInMilliseconds=mmm
#格式说明如下：
#xxx：为包含该服务方法的类的名称（通常为服务绑定接口的名称），例如 DeptHystrixService 接口。
#yyy：服务方法名，例如 deptInfo_Timeout() 方法。
#zzz：方法内的参数类型，例如 Integer、String 等等
#mmm：要设置的超时时间，单位为毫秒（1 秒 =1000 毫秒）
hystrix.command.DeptHystrixService#deptInfoTimeout(Integer).execution.isolation.thread.timeoutInMilliseconds = 3000
